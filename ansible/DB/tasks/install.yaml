---
- name: Add MariaDB repository
  yum_repository:
    name: MariaDB
    description: MariaDB 10.5 Repository
    baseurl: http://yum.mariadb.org/10.5/centos7-amd64
    gpgcheck: yes
    gpgkey: https://yum.mariadb.org/RPM-GPG-KEY-MariaDB
    enabled: yes

- name: Install epel-release, python mysql support library, MariaDB server and client
  yum:
    name:
      - epel-release
      - MySQL-python
      - MariaDB-server
      - MariaDB-client
    state: latest

- name: Start MariaDB server
  service:
    name: mariadb
    state: started
    enabled: yes

- name: Update mysql root password
  mysql_user:
    login_user: root
    login_password: "{{ mysql_root_password }}"
    name: root
    host: "{{ item }}"
    password: "{{ mysql_root_password }}"
    check_implicit_admin: yes
    priv: "*.*:ALL,GRANT"
  with_items:
    - "{{ ansible_hostname }}"
    - 127.0.0.1
    - ::1
    - localhost

- name: delete anonymouse user
  mysql_user:
    login_user: root
    login_password: "{{ mysql_root_password }}"
    name: ""
    host_all: yes
    state: absent

- name: Create a new user and grant privileges for database creation
  mysql_user:
    login_user: root
    login_password: "{{ mysql_root_password }}"
    name: "{{ mysql_user }}"
    password: "{{ mysql_user_password }}"
    priv: "{{ mysql_user_db_name }}.*:ALL,GRANT"
    host: "{{ item }}"
    state: present
  with_items:
    - "192.168.111.0/24"
    - "%"

- name: Create a new database
  mysql_db:
    login_user: "{{ mysql_user }}"
    login_password: "{{ mysql_user_password }}"
    name: "{{ mysql_user_db_name }}"
    encoding: "{{ mysql_encoding }}"
    state: present
  register: create_db

- name: Copy SQL file to the target server
  template:
    src: "templates/data.sql.j2"
    dest: "/home/vagrant/data.sql"
  register: sql_copy_result

- name: Insert initial data
  mysql_db:
    login_user: "{{ mysql_user }}"
    login_password: "{{ mysql_user_password }}"
    name: "{{ mysql_user_db_name }}"
    encoding: "{{ mysql_encoding }}"
    state: import
    target: "{{ sql_copy_result.dest }}"
  when: create_db.changed == true

- name: Temporary backup existing configuration files
  command: "cp /etc/{{ item }} /etc/{{ item }}.bak"
  with_items:
    - my.cnf
    - my.cnf.d/server.cnf
  failed_when: false
  register: tmp_backup

- name: Copy MariaDB configuration files
  template:
    src: "templates/{{ item.item }}.j2"
    dest: "/etc/{{ item.item }}"
  with_items: "{{ tmp_backup.results }}"
  loop_control:
    label: "{{ item.item }}"
  register: copy_result

- name: Keep configuration backup files
  command: "mv /etc/{{ item.item.item }}.bak /etc/{{ item.item.item }}.{{ ansible_date_time.iso8601_basic_short }}.bak"
  with_items: "{{ copy_result.results }}"
  loop_control:
    label: "{{ item.item.item }}"
  notify: Restart MariaDB server
  when: item.changed == true

- name: Remove unneeded backup files
  file:
    path: "/etc/{{ item.item.item }}.bak"
    state: absent
  with_items: "{{ copy_result.results }}"
  loop_control:
    label: "{{ item.item.item }}"
  when: item.changed != true
